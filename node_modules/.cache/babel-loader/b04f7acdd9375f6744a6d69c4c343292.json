{"ast":null,"code":"import _classCallCheck from \"/Users/agelastes/Code/blog-of-origami/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/agelastes/Code/blog-of-origami/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/agelastes/Code/blog-of-origami/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/agelastes/Code/blog-of-origami/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/agelastes/Code/blog-of-origami/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/agelastes/Code/blog-of-origami/src/components/Body/MainBody/Origami/Origami.js\";\nimport React, { Component } from 'react';\nimport Comment from \"./Comment/Comment\";\nimport axios from \"axios\";\n\nvar Origami =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Origami, _Component);\n\n  function Origami() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Origami);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Origami)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      commentsVisible: false,\n      commentList: [],\n      title: localStorage.getItem('login'),\n      text: \"\"\n    };\n\n    _this.viewComments = function () {\n      _this.setState({\n        commentsVisible: !_this.state.commentsVisible\n      });\n\n      axios.post('http://localhost:5002/api/origami/origamiInfo', {\n        id: _this.props.data._id,\n        withDetail: true\n      }).then(function (response) {\n        _this.setState({\n          commentList: response.data.comments\n        });\n      });\n    };\n\n    _this.textReader = function (e) {\n      _this.setState({\n        text: e.target.value\n      });\n    };\n\n    _this.createComment = function () {\n      console.log(_this.props.data._id);\n      var token = localStorage.getItem('token');\n      var defaultOptions = {\n        headers: {\n          Authorization: \"\".concat(token)\n        }\n      };\n      axios.post('http://localhost:5002/api/comment/create', {\n        text: _this.state.text,\n        origamiId: _this.props.data._id\n      }, defaultOptions).catch(function () {\n        console.log(\"error\");\n      });\n    };\n\n    _this.origamiDelete = function () {\n      var token = localStorage.getItem('token');\n      var defaultOptions = {\n        headers: {\n          Authorization: \"\".concat(token)\n        }\n      };\n      axios.patch('http://localhost:5002/api/origami/' + _this.props.data._id, {\n        deleted: true\n      }, defaultOptions).then(function () {\n        _this.props.reload();\n      }).catch(function () {\n        return console.log(\"error\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Origami, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      axios.post('http://localhost:5002/api/origami/origamiInfo', {\n        id: this.props.data._id,\n        withDetail: true\n      }).then(function (response) {\n        _this2.setState({\n          commentList: response.data.comments\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.commentList);\n      var commentList = [];\n      if (this.state.commentsVisible) commentList = this.state.commentList.map(function (comment) {\n        return React.createElement(Comment, {\n          data: comment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      });\n      ;\n      if (this.props.data.deleted) return null;else {\n        return React.createElement(\"div\", {\n          className: \"origami\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, this.props.data.title), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, this.props.data.description), React.createElement(\"button\", {\n          onClick: this.origamiDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"), React.createElement(\"button\", {\n          onClick: this.viewComments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\"), commentList, React.createElement(\"div\", {\n          className: \"comment-adder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          onChange: this.textReader,\n          placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.createComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\")));\n      }\n    }\n  }]);\n\n  return Origami;\n}(Component);\n\nexport default Origami;","map":{"version":3,"sources":["/Users/agelastes/Code/blog-of-origami/src/components/Body/MainBody/Origami/Origami.js"],"names":["React","Component","Comment","axios","Origami","state","commentsVisible","commentList","title","localStorage","getItem","text","viewComments","setState","post","id","props","data","_id","withDetail","then","response","comments","textReader","e","target","value","createComment","console","log","token","defaultOptions","headers","Authorization","origamiId","catch","origamiDelete","patch","deleted","reload","map","comment","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  Comment  from \"./Comment/Comment\"\nimport axios from \"axios\";\n\nclass Origami extends Component {\n    state = {\n      commentsVisible: false,\n        commentList: [],\n            title: localStorage.getItem('login'),\n            text:  \"\"\n    };\n    componentDidUpdate() {\n        axios.post('http://localhost:5002/api/origami/origamiInfo', {id: this.props.data._id, withDetail: true})\n            .then((response) => {this.setState({commentList: response.data.comments})})\n    }\n    viewComments = () => {\n        this.setState({commentsVisible: !this.state.commentsVisible});\n        axios.post('http://localhost:5002/api/origami/origamiInfo', {id: this.props.data._id, withDetail: true})\n            .then((response) => {this.setState({commentList: response.data.comments})})\n    };\n    textReader = (e) => {\n        this.setState({text: e.target.value})\n    };\n    createComment = () => {\n        console.log(this.props.data._id);\n        const token = localStorage.getItem('token');\n        const defaultOptions = {\n            headers: {\n                Authorization: `${token}`\n            }\n        };\n        axios.post(\n            'http://localhost:5002/api/comment/create', {\n                text: this.state.text, origamiId: this.props.data._id\n            }, defaultOptions\n        ).catch(\n            () => {\n                console.log(\"error\");\n            }\n        )\n    };\n    origamiDelete = () => {\n        const token = localStorage.getItem('token');\n        const defaultOptions = {\n            headers: {\n                Authorization: `${token}`\n            }\n        };\n        axios.patch('http://localhost:5002/api/origami/' + this.props.data._id, {deleted: true}, defaultOptions)\n            .then(() => {this.props.reload()})\n            .catch(() => (console.log(\"error\")))\n    };\n    render() {\n        console.log(this.state.commentList);\n        let commentList = [];\n        if (this.state.commentsVisible) commentList = this.state.commentList.map((comment) => <Comment  data = {comment} />);;\n        if (this.props.data.deleted) return null;\n        else {\n            return (\n                <div className=\"origami\">\n                    <h2>{this.props.data.title}</h2>\n                    <span>{this.props.data.description}</span>\n                    <button onClick={this.origamiDelete}>Удалить</button>\n                    <button onClick={this.viewComments}>Комментарии</button>\n                    {commentList}\n                    <div className=\"comment-adder\">\n                        <input onChange={this.textReader} placeholder=\"Комментарий\" />\n                        <button onClick={this.createComment}>Отправить</button>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Origami;\n"]},"metadata":{},"sourceType":"module"}